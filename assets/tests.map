{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-app/tests/acceptance/u-k-t-i-o-app-dolzhnost-l-test.js","ember-app/tests/acceptance/u-k-t-i-o-app-oborudovanie-l-test.js","ember-app/tests/acceptance/u-k-t-i-o-app-organizaciya-l-test.js","ember-app/tests/acceptance/u-k-t-i-o-app-sotrudnik-l-test.js","ember-app/tests/acceptance/u-k-t-i-o-app-tip-oborudovaniya-l-test.js","ember-app/tests/app.lint-test.js","ember-app/tests/helpers/destroy-app.js","ember-app/tests/helpers/ember-i18n/test-helpers.js","ember-app/tests/helpers/ember-prop-types.js","ember-app/tests/helpers/module-for-acceptance.js","ember-app/tests/helpers/start-app.js","ember-app/tests/test-helper.js","ember-app/tests/tests.lint-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-dolzhnost-e-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-dolzhnost-l-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-oborudovanie-e-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-oborudovanie-l-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-organizaciya-e-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-organizaciya-l-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-sotrudnik-e-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-sotrudnik-l-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-e-test.js","ember-app/tests/unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-l-test.js","ember-app/tests/unit/models/u-k-t-i-o-app-dolzhnost-test.js","ember-app/tests/unit/models/u-k-t-i-o-app-oborudovanie-test.js","ember-app/tests/unit/models/u-k-t-i-o-app-organizaciya-test.js","ember-app/tests/unit/models/u-k-t-i-o-app-sotrudnik-test.js","ember-app/tests/unit/models/u-k-t-i-o-app-tip-oborudovaniya-test.js","ember-app/tests/unit/routes/login-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-dolzhnost-e-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-dolzhnost-l-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-oborudovanie-e-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-oborudovanie-l-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-organizaciya-e-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-organizaciya-l-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-sotrudnik-e-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-sotrudnik-l-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-tip-oborudovaniya-e-test.js","ember-app/tests/unit/routes/u-k-t-i-o-app-tip-oborudovaniya-l-test.js","ember-app/tests/unit/serializers/u-k-t-i-o-app-dolzhnost-test.js","ember-app/tests/unit/serializers/u-k-t-i-o-app-oborudovanie-test.js","ember-app/tests/unit/serializers/u-k-t-i-o-app-organizaciya-test.js","ember-app/tests/unit/serializers/u-k-t-i-o-app-sotrudnik-test.js","ember-app/tests/unit/serializers/u-k-t-i-o-app-tip-oborudovaniya-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('ember-app/tests/acceptance/u-k-t-i-o-app-dolzhnost-l-test', ['qunit', 'ember-app/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | u k t i o app dolzhnost l');\n\n  (0, _qunit.test)('testing /u-k-t-i-o-app-dolzhnost-l', function (assert) {\n    visit('/u-k-t-i-o-app-dolzhnost-l');\n\n    andThen(() => {\n      checkOlvConfig('[data-test-olv]', null, assert, ['refreshButton', 'createNewButton', 'colsConfigButton']);\n\n      const controller = this.application.__container__.lookup('controller:' + currentRouteName());\n      const newFormRoute = controller.get('editFormRoute') + '.new';\n      goToNewForm('[data-test-olv]', null, assert, newFormRoute);\n    });\n  });\n});","define('ember-app/tests/acceptance/u-k-t-i-o-app-oborudovanie-l-test', ['qunit', 'ember-app/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | u k t i o app oborudovanie l');\n\n  (0, _qunit.test)('testing /u-k-t-i-o-app-oborudovanie-l', function (assert) {\n    visit('/u-k-t-i-o-app-oborudovanie-l');\n\n    andThen(() => {\n      checkOlvConfig('[data-test-olv]', null, assert, ['refreshButton', 'createNewButton', 'colsConfigButton']);\n\n      const controller = this.application.__container__.lookup('controller:' + currentRouteName());\n      const newFormRoute = controller.get('editFormRoute') + '.new';\n      goToNewForm('[data-test-olv]', null, assert, newFormRoute);\n    });\n  });\n});","define('ember-app/tests/acceptance/u-k-t-i-o-app-organizaciya-l-test', ['qunit', 'ember-app/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | u k t i o app organizaciya l');\n\n  (0, _qunit.test)('testing /u-k-t-i-o-app-organizaciya-l', function (assert) {\n    visit('/u-k-t-i-o-app-organizaciya-l');\n\n    andThen(() => {\n      checkOlvConfig('[data-test-olv]', null, assert, ['refreshButton', 'createNewButton', 'colsConfigButton']);\n\n      const controller = this.application.__container__.lookup('controller:' + currentRouteName());\n      const newFormRoute = controller.get('editFormRoute') + '.new';\n      goToNewForm('[data-test-olv]', null, assert, newFormRoute);\n    });\n  });\n});","define('ember-app/tests/acceptance/u-k-t-i-o-app-sotrudnik-l-test', ['qunit', 'ember-app/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | u k t i o app sotrudnik l');\n\n  (0, _qunit.test)('testing /u-k-t-i-o-app-sotrudnik-l', function (assert) {\n    visit('/u-k-t-i-o-app-sotrudnik-l');\n\n    andThen(() => {\n      checkOlvConfig('[data-test-olv]', null, assert, ['refreshButton', 'createNewButton', 'colsConfigButton']);\n\n      const controller = this.application.__container__.lookup('controller:' + currentRouteName());\n      const newFormRoute = controller.get('editFormRoute') + '.new';\n      goToNewForm('[data-test-olv]', null, assert, newFormRoute);\n    });\n  });\n});","define('ember-app/tests/acceptance/u-k-t-i-o-app-tip-oborudovaniya-l-test', ['qunit', 'ember-app/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | u k t i o app tip oborudovaniya l');\n\n  (0, _qunit.test)('testing /u-k-t-i-o-app-tip-oborudovaniya-l', function (assert) {\n    visit('/u-k-t-i-o-app-tip-oborudovaniya-l');\n\n    andThen(() => {\n      checkOlvConfig('[data-test-olv]', null, assert, ['refreshButton', 'createNewButton', 'colsConfigButton']);\n\n      const controller = this.application.__container__.lookup('controller:' + currentRouteName());\n      const newFormRoute = controller.get('editFormRoute') + '.new';\n      goToNewForm('[data-test-olv]', null, assert, newFormRoute);\n    });\n  });\n});","define('ember-app/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/login.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-dolzhnost-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-dolzhnost-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-dolzhnost-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-dolzhnost-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-dolzhnost-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-dolzhnost-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-oborudovanie-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-oborudovanie-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-oborudovanie-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-oborudovanie-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-oborudovanie-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-oborudovanie-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-organizaciya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-organizaciya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-organizaciya-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-organizaciya-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-organizaciya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-organizaciya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-sotrudnik-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-sotrudnik-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-sotrudnik-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-sotrudnik-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-sotrudnik-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-sotrudnik-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-tip-oborudovaniya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-tip-oborudovaniya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-tip-oborudovaniya-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-tip-oborudovaniya-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/u-k-t-i-o-app-tip-oborudovaniya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/u-k-t-i-o-app-tip-oborudovaniya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('enums/u-k-t-i-o-app-t-status.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'enums/u-k-t-i-o-app-t-status.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-dolzhnost-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-dolzhnost-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-dolzhnost-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-dolzhnost-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-oborudovanie-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-oborudovanie-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-oborudovanie-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-oborudovanie-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-organizaciya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-organizaciya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-organizaciya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-organizaciya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-sotrudnik-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-sotrudnik-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-sotrudnik-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-sotrudnik-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-tip-oborudovaniya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-tip-oborudovaniya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/forms/u-k-t-i-o-app-tip-oborudovaniya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/u-k-t-i-o-app-tip-oborudovaniya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/models/u-k-t-i-o-app-dolzhnost.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/u-k-t-i-o-app-dolzhnost.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/models/u-k-t-i-o-app-oborudovanie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/u-k-t-i-o-app-oborudovanie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/models/u-k-t-i-o-app-organizaciya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/u-k-t-i-o-app-organizaciya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/models/u-k-t-i-o-app-sotrudnik.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/u-k-t-i-o-app-sotrudnik.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/models/u-k-t-i-o-app-tip-oborudovaniya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/u-k-t-i-o-app-tip-oborudovaniya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/en/translations.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-dolzhnost-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-dolzhnost-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-dolzhnost-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-dolzhnost-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-oborudovanie-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-oborudovanie-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-oborudovanie-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-oborudovanie-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-organizaciya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-organizaciya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-organizaciya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-organizaciya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-sotrudnik-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-sotrudnik-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-sotrudnik-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-sotrudnik-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-tip-oborudovaniya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-tip-oborudovaniya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/forms/u-k-t-i-o-app-tip-oborudovaniya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/u-k-t-i-o-app-tip-oborudovaniya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/models/u-k-t-i-o-app-dolzhnost.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/u-k-t-i-o-app-dolzhnost.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/models/u-k-t-i-o-app-oborudovanie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/u-k-t-i-o-app-oborudovanie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/models/u-k-t-i-o-app-organizaciya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/u-k-t-i-o-app-organizaciya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/models/u-k-t-i-o-app-sotrudnik.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/u-k-t-i-o-app-sotrudnik.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/models/u-k-t-i-o-app-tip-oborudovaniya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/u-k-t-i-o-app-tip-oborudovaniya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('locales/ru/translations.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/translations.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/models/u-k-t-i-o-app-dolzhnost.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/u-k-t-i-o-app-dolzhnost.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/models/u-k-t-i-o-app-oborudovanie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/u-k-t-i-o-app-oborudovanie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/models/u-k-t-i-o-app-organizaciya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/u-k-t-i-o-app-organizaciya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/models/u-k-t-i-o-app-sotrudnik.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/u-k-t-i-o-app-sotrudnik.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/models/u-k-t-i-o-app-tip-oborudovaniya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/u-k-t-i-o-app-tip-oborudovaniya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/serializers/u-k-t-i-o-app-dolzhnost.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/u-k-t-i-o-app-dolzhnost.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/serializers/u-k-t-i-o-app-oborudovanie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/u-k-t-i-o-app-oborudovanie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/serializers/u-k-t-i-o-app-organizaciya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/u-k-t-i-o-app-organizaciya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/serializers/u-k-t-i-o-app-sotrudnik.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/u-k-t-i-o-app-sotrudnik.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('mixins/regenerated/serializers/u-k-t-i-o-app-tip-oborudovaniya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/u-k-t-i-o-app-tip-oborudovaniya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/custom-inflector-rules.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/custom-inflector-rules.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/u-k-t-i-o-app-dolzhnost.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/u-k-t-i-o-app-dolzhnost.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/u-k-t-i-o-app-oborudovanie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/u-k-t-i-o-app-oborudovanie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/u-k-t-i-o-app-organizaciya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/u-k-t-i-o-app-organizaciya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/u-k-t-i-o-app-sotrudnik.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/u-k-t-i-o-app-sotrudnik.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/u-k-t-i-o-app-tip-oborudovaniya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/u-k-t-i-o-app-tip-oborudovaniya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-dolzhnost-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-dolzhnost-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-dolzhnost-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-dolzhnost-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-dolzhnost-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-dolzhnost-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-oborudovanie-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-oborudovanie-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-oborudovanie-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-oborudovanie-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-oborudovanie-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-oborudovanie-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-organizaciya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-organizaciya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-organizaciya-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-organizaciya-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-organizaciya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-organizaciya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-sotrudnik-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-sotrudnik-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-sotrudnik-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-sotrudnik-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-sotrudnik-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-sotrudnik-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-tip-oborudovaniya-e.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-tip-oborudovaniya-e.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-tip-oborudovaniya-e/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-tip-oborudovaniya-e/new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/u-k-t-i-o-app-tip-oborudovaniya-l.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/u-k-t-i-o-app-tip-oborudovaniya-l.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/u-k-t-i-o-app-dolzhnost.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/u-k-t-i-o-app-dolzhnost.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/u-k-t-i-o-app-oborudovanie.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/u-k-t-i-o-app-oborudovanie.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/u-k-t-i-o-app-organizaciya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/u-k-t-i-o-app-organizaciya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/u-k-t-i-o-app-sotrudnik.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/u-k-t-i-o-app-sotrudnik.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('serializers/u-k-t-i-o-app-tip-oborudovaniya.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/u-k-t-i-o-app-tip-oborudovaniya.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/store.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/store.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('transforms/u-k-t-i-o-app-t-status.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/u-k-t-i-o-app-t-status.js should pass ESLint\\n\\n');\n  });\n});","define('ember-app/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('ember-app/tests/helpers/ember-i18n/test-helpers', ['ember-i18n/test-support/-private/t', 'ember-i18n/test-support/-private/assert-translation'], function (_t2, _assertTranslation2) {\n  'use strict';\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  Ember.Test.registerHelper('t', function (app, key, interpolations) {\n    return (0, _t2.default)(app.__container__, key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  Ember.Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    const text = (0, _t2.default)(app.__container__, key, interpolations);\n\n    (0, _assertTranslation2.default)(element, key, text);\n  });\n});","define('ember-app/tests/helpers/ember-prop-types', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponent = createComponent;\n\n  const { VERSION } = Ember;\n\n  /**\n   * Determine if we are on a version of Ember that includes Glimmer 2\n   * @returns {Boolean} whether or not we are on Glimmer 2\n   */\n  function isGlimmer2() {\n    const [major, minor] = VERSION.split('.');\n    return parseInt(major) > 1 && parseInt(minor) > 9;\n  }\n\n  /**\n   * Programitcally instantiate instance of component class\n   * @param {Ember.Component} component - component class to instantiate\n   * @returns {Ember.Component} instance of component class\n   */\n  function createComponent(component) {\n    if (isGlimmer2()) {\n      return component.create({ renderer: {} });\n    }\n\n    return component.create();\n  }\n});","define('ember-app/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember-app/tests/helpers/start-app', 'ember-app/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name, options = {}) {\n    (0, _qunit.module)(name, {\n      beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach() {\n        let afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Ember.RSVP.resolve(afterEach).then(() => (0, _destroyApp.default)(this.application));\n      }\n    });\n  };\n});","define('ember-app/tests/helpers/start-app', ['exports', 'ember-app/app', 'ember-app/config/environment', 'ember-flexberry/test-support'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    let attributes = Ember.merge({}, _environment.default.APP);\n    attributes.autoboot = true;\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(() => {\n      let application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('ember-app/tests/test-helper', ['ember-app/app', 'ember-app/config/environment', '@ember/test-helpers', 'ember-qunit'], function (_app, _environment, _testHelpers, _emberQunit) {\n  'use strict';\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n\n  (0, _emberQunit.start)();\n});","define('ember-app/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('acceptance/u-k-t-i-o-app-dolzhnost-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/u-k-t-i-o-app-dolzhnost-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/u-k-t-i-o-app-oborudovanie-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/u-k-t-i-o-app-oborudovanie-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/u-k-t-i-o-app-organizaciya-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/u-k-t-i-o-app-organizaciya-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/u-k-t-i-o-app-sotrudnik-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/u-k-t-i-o-app-sotrudnik-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/u-k-t-i-o-app-tip-oborudovaniya-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/u-k-t-i-o-app-tip-oborudovaniya-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-dolzhnost-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-dolzhnost-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-dolzhnost-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-dolzhnost-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-oborudovanie-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-oborudovanie-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-oborudovanie-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-oborudovanie-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-organizaciya-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-organizaciya-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-organizaciya-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-organizaciya-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-sotrudnik-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-sotrudnik-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-sotrudnik-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-sotrudnik-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/u-k-t-i-o-app-dolzhnost-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/u-k-t-i-o-app-dolzhnost-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/u-k-t-i-o-app-oborudovanie-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/u-k-t-i-o-app-oborudovanie-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/u-k-t-i-o-app-organizaciya-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/u-k-t-i-o-app-organizaciya-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/u-k-t-i-o-app-sotrudnik-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/u-k-t-i-o-app-sotrudnik-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/u-k-t-i-o-app-tip-oborudovaniya-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/u-k-t-i-o-app-tip-oborudovaniya-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-dolzhnost-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-dolzhnost-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-dolzhnost-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-dolzhnost-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-oborudovanie-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-oborudovanie-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-oborudovanie-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-oborudovanie-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-organizaciya-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-organizaciya-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-organizaciya-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-organizaciya-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-sotrudnik-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-sotrudnik-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-sotrudnik-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-sotrudnik-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-tip-oborudovaniya-e-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-tip-oborudovaniya-e-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/u-k-t-i-o-app-tip-oborudovaniya-l-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/u-k-t-i-o-app-tip-oborudovaniya-l-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/u-k-t-i-o-app-dolzhnost-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/u-k-t-i-o-app-dolzhnost-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/u-k-t-i-o-app-oborudovanie-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/u-k-t-i-o-app-oborudovanie-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/u-k-t-i-o-app-organizaciya-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/u-k-t-i-o-app-organizaciya-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/u-k-t-i-o-app-sotrudnik-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/u-k-t-i-o-app-sotrudnik-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/serializers/u-k-t-i-o-app-tip-oborudovaniya-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/u-k-t-i-o-app-tip-oborudovaniya-test.js should pass ESLint\\n\\n');\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-dolzhnost-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-dolzhnost-e', 'Unit | Controller | u-k-t-i-o-app-dolzhnost-e', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:flexberry-file-view-dialog', 'controller:lookup-dialog', 'controller:filters-dialog', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-dolzhnost-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-dolzhnost-l', 'Unit | Controller | u-k-t-i-o-app-dolzhnost-l', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:filters-dialog', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-oborudovanie-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-oborudovanie-e', 'Unit | Controller | u-k-t-i-o-app-oborudovanie-e', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:flexberry-file-view-dialog', 'controller:lookup-dialog', 'controller:filters-dialog', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-oborudovanie-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-oborudovanie-l', 'Unit | Controller | u-k-t-i-o-app-oborudovanie-l', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:filters-dialog', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-organizaciya-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-organizaciya-e', 'Unit | Controller | u-k-t-i-o-app-organizaciya-e', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:flexberry-file-view-dialog', 'controller:lookup-dialog', 'controller:filters-dialog', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-organizaciya-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-organizaciya-l', 'Unit | Controller | u-k-t-i-o-app-organizaciya-l', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:filters-dialog', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-sotrudnik-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-sotrudnik-e', 'Unit | Controller | u-k-t-i-o-app-sotrudnik-e', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:flexberry-file-view-dialog', 'controller:lookup-dialog', 'controller:filters-dialog', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-sotrudnik-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-sotrudnik-l', 'Unit | Controller | u-k-t-i-o-app-sotrudnik-l', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:filters-dialog', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-tip-oborudovaniya-e', 'Unit | Controller | u-k-t-i-o-app-tip-oborudovaniya-e', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:flexberry-file-view-dialog', 'controller:lookup-dialog', 'controller:filters-dialog', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/u-k-t-i-o-app-tip-oborudovaniya-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:u-k-t-i-o-app-tip-oborudovaniya-l', 'Unit | Controller | u-k-t-i-o-app-tip-oborudovaniya-l', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:advlimit-dialog', 'controller:colsconfig-dialog', 'controller:filters-dialog', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/models/u-k-t-i-o-app-dolzhnost-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-dolzhnost', 'Unit | Model | u-k-t-i-o-app-dolzhnost', {\n    // Specify the other units that are required for this test.\n    needs: ['model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many', 'service:syncer']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/u-k-t-i-o-app-oborudovanie-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-oborudovanie', 'Unit | Model | u-k-t-i-o-app-oborudovanie', {\n    // Specify the other units that are required for this test.\n    needs: ['model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many', 'service:syncer']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/u-k-t-i-o-app-organizaciya-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-organizaciya', 'Unit | Model | u-k-t-i-o-app-organizaciya', {\n    // Specify the other units that are required for this test.\n    needs: ['model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many', 'service:syncer']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/u-k-t-i-o-app-sotrudnik-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-sotrudnik', 'Unit | Model | u-k-t-i-o-app-sotrudnik', {\n    // Specify the other units that are required for this test.\n    needs: ['model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many', 'service:syncer']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/u-k-t-i-o-app-tip-oborudovaniya-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-tip-oborudovaniya', 'Unit | Model | u-k-t-i-o-app-tip-oborudovaniya', {\n    // Specify the other units that are required for this test.\n    needs: ['model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many', 'service:syncer']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/routes/login-test', ['qunit', 'ember-qunit'], function (_qunit, _emberQunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Route | login', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:login');\n      assert.ok(route);\n    });\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-dolzhnost-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-dolzhnost-e', 'Unit | Route | u-k-t-i-o-app-dolzhnost-e', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-dolzhnost-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-dolzhnost-l', 'Unit | Route | u-k-t-i-o-app-dolzhnost-l', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:form-load-time-tracker', 'service:objectlistview-events', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-oborudovanie-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-oborudovanie-e', 'Unit | Route | u-k-t-i-o-app-oborudovanie-e', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-oborudovanie-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-oborudovanie-l', 'Unit | Route | u-k-t-i-o-app-oborudovanie-l', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:form-load-time-tracker', 'service:objectlistview-events', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-organizaciya-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-organizaciya-e', 'Unit | Route | u-k-t-i-o-app-organizaciya-e', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-organizaciya-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-organizaciya-l', 'Unit | Route | u-k-t-i-o-app-organizaciya-l', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:form-load-time-tracker', 'service:objectlistview-events', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-sotrudnik-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-sotrudnik-e', 'Unit | Route | u-k-t-i-o-app-sotrudnik-e', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-sotrudnik-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-sotrudnik-l', 'Unit | Route | u-k-t-i-o-app-sotrudnik-l', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:form-load-time-tracker', 'service:objectlistview-events', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-tip-oborudovaniya-e-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-tip-oborudovaniya-e', 'Unit | Route | u-k-t-i-o-app-tip-oborudovaniya-e', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:detail-interaction', 'service:objectlistview-events', 'service:user-settings', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/u-k-t-i-o-app-tip-oborudovaniya-l-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:u-k-t-i-o-app-tip-oborudovaniya-l', 'Unit | Route | u-k-t-i-o-app-tip-oborudovaniya-l', {\n    // Specify the other units that are required for this test.\n    needs: ['service:cols-config-menu', 'service:form-load-time-tracker', 'service:objectlistview-events', 'service:app-state', 'service:adv-limit']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    let route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/serializers/u-k-t-i-o-app-dolzhnost-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-dolzhnost', 'Unit | Serializer | u-k-t-i-o-app-dolzhnost', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:u-k-t-i-o-app-dolzhnost', 'service:syncer', 'transform:file', 'transform:decimal', 'transform:guid', 'transform:u-k-t-i-o-app-t-status', 'model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    let record = this.subject();\n\n    let serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/u-k-t-i-o-app-oborudovanie-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-oborudovanie', 'Unit | Serializer | u-k-t-i-o-app-oborudovanie', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:u-k-t-i-o-app-oborudovanie', 'service:syncer', 'transform:file', 'transform:decimal', 'transform:guid', 'transform:u-k-t-i-o-app-t-status', 'model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    let record = this.subject();\n\n    let serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/u-k-t-i-o-app-organizaciya-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-organizaciya', 'Unit | Serializer | u-k-t-i-o-app-organizaciya', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:u-k-t-i-o-app-organizaciya', 'service:syncer', 'transform:file', 'transform:decimal', 'transform:guid', 'transform:u-k-t-i-o-app-t-status', 'model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    let record = this.subject();\n\n    let serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/u-k-t-i-o-app-sotrudnik-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-sotrudnik', 'Unit | Serializer | u-k-t-i-o-app-sotrudnik', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:u-k-t-i-o-app-sotrudnik', 'service:syncer', 'transform:file', 'transform:decimal', 'transform:guid', 'transform:u-k-t-i-o-app-t-status', 'model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    let record = this.subject();\n\n    let serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/u-k-t-i-o-app-tip-oborudovaniya-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('u-k-t-i-o-app-tip-oborudovaniya', 'Unit | Serializer | u-k-t-i-o-app-tip-oborudovaniya', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:u-k-t-i-o-app-tip-oborudovaniya', 'service:syncer', 'transform:file', 'transform:decimal', 'transform:guid', 'transform:u-k-t-i-o-app-t-status', 'model:u-k-t-i-o-app-dolzhnost', 'model:u-k-t-i-o-app-oborudovanie', 'model:u-k-t-i-o-app-organizaciya', 'model:u-k-t-i-o-app-sotrudnik', 'model:u-k-t-i-o-app-tip-oborudovaniya', 'validator:ds-error', 'validator:presence', 'validator:number', 'validator:date', 'validator:belongs-to', 'validator:has-many']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    let record = this.subject();\n\n    let serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/config/environment', [], function() {\n  var prefix = 'ember-app';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfneA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}